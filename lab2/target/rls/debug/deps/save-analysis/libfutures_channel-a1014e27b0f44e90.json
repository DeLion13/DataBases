{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8","program":"/Users/dd26/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_channel","--edition=2018","/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"sink\"","--cfg","feature=\"std\"","-C","metadata=a1014e27b0f44e90","-C","extra-filename=-a1014e27b0f44e90","--out-dir","/Users/dd26/Documents/DataBases/lab2/target/rls/debug/deps","-L","dependency=/Users/dd26/Documents/DataBases/lab2/target/rls/debug/deps","--extern","futures_core=/Users/dd26/Documents/DataBases/lab2/target/rls/debug/deps/libfutures_core-c1b8e3785d292f3d.rmeta","--extern","futures_sink=/Users/dd26/Documents/DataBases/lab2/target/rls/debug/deps/libfutures_sink-bb43b37081094ef3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/dd26/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/dd26/Documents/DataBases/lab2/target/rls/debug/deps/libfutures_channel-a1014e27b0f44e90.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[876577687102555518,1885050885940505500]},"crate_root":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src","external_crates":[{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9505258173972014140,1687564053001788342]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","num":2,"id":{"name":"core","disambiguator":[11611887195329836898,18391061204127126749]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8031993392717489033,4124505603786489705]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15271802224688203332,8792150453795694033]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7165577602573969849,9858108452520037846]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14698847031314625437,491468730102695142]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13330479813603739683,6803795581109914288]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18059772732427324572,13387991576644447952]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[10236583916794409636,10240650400930061727]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[11381542376919589428,1099759283771964623]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[362513579181741490,3555756610499304386]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726896196391708128,17121846613634101866]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15657039231647705578,5960932578145670068]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7592225372802278695,9789656229435184476]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","num":15,"id":{"name":"futures_core","disambiguator":[15661329373077054856,12390399529844736879]}},{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/sink_impl.rs","num":16,"id":{"name":"futures_sink","disambiguator":[16435228083629031262,17707957985159894966]}}],"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":0,"byte_end":1732,"line_start":1,"line_end":47,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":0,"byte_end":1732,"line_start":1,"line_end":47,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":34},{"krate":0,"index":288}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"! Asynchronous channels.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate provides channels that can be used to communicate between","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":31,"byte_end":103,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! asynchronous tasks.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":104,"byte_end":127,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":128,"byte_end":131,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! All items of this library are only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":132,"byte_end":222,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":223,"byte_end":280,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":407,"byte_end":495,"line_start":13,"line_end":13,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":663,"byte_end":684,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default, clippy ::\n        match_like_matches_macro)","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":889,"byte_end":966,"line_start":21,"line_end":21,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":84},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":377},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":380},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":391},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":122},{"krate":0,"index":406},{"krate":0,"index":417},{"krate":0,"index":415},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":419},{"krate":0,"index":434},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":437},{"krate":0,"index":450},{"krate":0,"index":448},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":452},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":478},{"krate":0,"index":476},{"krate":0,"index":475},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":172},{"krate":0,"index":187},{"krate":0,"index":202},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":1638,"byte_end":1661,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"! A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6995962,"byte_end":6996031,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"! asynchronous tasks.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996032,"byte_end":6996055,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996056,"byte_end":6996059,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996060,"byte_end":6996130,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996131,"byte_end":6996210,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"! read values out of the channel. If there is no message to read from the","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996211,"byte_end":6996286,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! channel, the current task will be notified when a new value is sent.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996287,"byte_end":6996359,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996360,"byte_end":6996442,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"! the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996443,"byte_end":6996520,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"! the task will be notified when additional capacity is available. In other","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996521,"byte_end":6996598,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"! words, the channel provides backpressure.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996599,"byte_end":6996644,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996645,"byte_end":6996648,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996649,"byte_end":6996725,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996726,"byte_end":6996729,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! # Disconnection","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996730,"byte_end":6996749,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996750,"byte_end":6996753,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996754,"byte_end":6996820,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"! possible to send values into the channel. This is considered the termination","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996821,"byte_end":6996901,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"! event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996902,"byte_end":6996959,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"! will return `Ok(Ready(None))`.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996960,"byte_end":6996994,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996995,"byte_end":6996998,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6996999,"byte_end":6997069,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"! be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997070,"byte_end":6997149,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"! result in an error.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997150,"byte_end":6997173,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997174,"byte_end":6997177,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! # Clean Shutdown","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997178,"byte_end":6997198,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997199,"byte_end":6997202,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997203,"byte_end":6997269,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"! there to be messages still in the channel that will not be processed. As","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997270,"byte_end":6997346,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"! such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997347,"byte_end":6997427,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"! receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997428,"byte_end":6997508,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"! be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997509,"byte_end":6997581,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"! completion, at which point the receiver can be dropped.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997582,"byte_end":6997641,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997642,"byte_end":6997645,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: struct.Sender.html","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997646,"byte_end":6997680,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"! [`Receiver`]: struct.Receiver.html","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997681,"byte_end":6997719,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"! [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997720,"byte_end":6997779,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"! [`Receiver::poll_next`]:","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997780,"byte_end":6997808,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"!     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":6997809,"byte_end":6997879,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":380},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001253,"byte_end":7001259,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001105,"byte_end":7001156,"line_start":121,"line_end":121,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001157,"byte_end":7001160,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001161,"byte_end":7001224,"line_start":123,"line_end":123,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001451,"byte_end":7001466,"line_start":131,"line_end":131,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001296,"byte_end":7001350,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001351,"byte_end":7001354,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001355,"byte_end":7001422,"line_start":129,"line_end":129,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":394},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001738,"byte_end":7001746,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":396}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001593,"byte_end":7001641,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001642,"byte_end":7001645,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001646,"byte_end":7001709,"line_start":138,"line_end":138,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001948,"byte_end":7001965,"line_start":148,"line_end":148,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":402}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001796,"byte_end":7001847,"line_start":144,"line_end":144,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001848,"byte_end":7001851,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001852,"byte_end":7001919,"line_start":146,"line_end":146,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":406},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002242,"byte_end":7002251,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":407}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002132,"byte_end":7002191,"line_start":155,"line_end":155,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":419},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002390,"byte_end":7002402,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002282,"byte_end":7002346,"line_start":161,"line_end":161,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002612,"byte_end":7002624,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":125}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002534,"byte_end":7002600,"line_start":174,"line_end":174,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7003074,"byte_end":7003081,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002991,"byte_end":7003062,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7003298,"byte_end":7003313,"line_start":201,"line_end":201,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7003211,"byte_end":7003286,"line_start":200,"line_end":200,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004138,"byte_end":7004145,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004055,"byte_end":7004126,"line_start":230,"line_end":230,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004288,"byte_end":7004303,"line_start":236,"line_end":236,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004201,"byte_end":7004276,"line_start":235,"line_end":235,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004444,"byte_end":7004454,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004367,"byte_end":7004432,"line_start":240,"line_end":240,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004562,"byte_end":7004577,"line_start":246,"line_end":246,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"fn (self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004496,"byte_end":7004550,"line_start":245,"line_end":245,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007982,"byte_end":7007989,"line_start":363,"line_end":363,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"fn <T> (buffer: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007356,"byte_end":7007436,"line_start":352,"line_end":352,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007437,"byte_end":7007440,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007441,"byte_end":7007520,"line_start":354,"line_end":354,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007521,"byte_end":7007598,"line_start":355,"line_end":355,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007599,"byte_end":7007670,"line_start":356,"line_end":356,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007671,"byte_end":7007744,"line_start":357,"line_end":357,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007745,"byte_end":7007815,"line_start":358,"line_end":358,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007816,"byte_end":7007819,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007820,"byte_end":7007874,"line_start":360,"line_end":360,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007875,"byte_end":7007962,"line_start":361,"line_end":361,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007963,"byte_end":7007974,"line_start":362,"line_end":362,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":160},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7009253,"byte_end":7009262,"line_start":400,"line_end":400,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"fn <T> () -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7008741,"byte_end":7008817,"line_start":390,"line_end":390,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7008818,"byte_end":7008828,"line_start":391,"line_end":391,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7008829,"byte_end":7008832,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7008833,"byte_end":7008913,"line_start":393,"line_end":393,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7008914,"byte_end":7008993,"line_start":394,"line_end":394,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7008994,"byte_end":7009007,"line_start":395,"line_end":395,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7009008,"byte_end":7009011,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7009012,"byte_end":7009091,"line_start":397,"line_end":397,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7009092,"byte_end":7009168,"line_start":398,"line_end":398,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7009169,"byte_end":7009245,"line_start":399,"line_end":399,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020032,"byte_end":7020040,"line_start":722,"line_end":722,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn (&mut self, msg: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7019919,"byte_end":7019989,"line_start":720,"line_end":720,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7019994,"byte_end":7020020,"line_start":721,"line_end":721,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020601,"byte_end":7020611,"line_start":740,"line_end":740,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"fn (&mut self, msg: T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020385,"byte_end":7020419,"line_start":735,"line_end":735,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020424,"byte_end":7020427,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020432,"byte_end":7020477,"line_start":737,"line_end":737,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020482,"byte_end":7020553,"line_start":738,"line_end":738,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020558,"byte_end":7020589,"line_start":739,"line_end":739,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7021239,"byte_end":7021249,"line_start":757,"line_end":757,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020728,"byte_end":7020802,"line_start":745,"line_end":745,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020807,"byte_end":7020845,"line_start":746,"line_end":746,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020850,"byte_end":7020853,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020858,"byte_end":7020876,"line_start":748,"line_end":748,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020881,"byte_end":7020884,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020889,"byte_end":7020913,"line_start":750,"line_end":750,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020918,"byte_end":7020921,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020926,"byte_end":7020985,"line_start":752,"line_end":752,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7020990,"byte_end":7021039,"line_start":753,"line_end":753,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7021044,"byte_end":7021120,"line_start":754,"line_end":754,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7021125,"byte_end":7021153,"line_start":755,"line_end":755,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7021158,"byte_end":7021227,"line_start":756,"line_end":756,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7021574,"byte_end":7021583,"line_start":768,"line_end":768,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7021493,"byte_end":7021562,"line_start":767,"line_end":767,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7021773,"byte_end":7021786,"line_start":773,"line_end":773,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7021687,"byte_end":7021761,"line_start":772,"line_end":772,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7022002,"byte_end":7022012,"line_start":780,"line_end":780,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7021899,"byte_end":7021990,"line_start":779,"line_end":779,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7022130,"byte_end":7022143,"line_start":785,"line_end":785,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7022060,"byte_end":7022118,"line_start":784,"line_end":784,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7022391,"byte_end":7022406,"line_start":793,"line_end":793,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"fn (&self, receiver: &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7022326,"byte_end":7022379,"line_start":792,"line_end":792,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7022674,"byte_end":7022687,"line_start":801,"line_end":801,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"fn <H> (&self, hasher: &mut H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7022614,"byte_end":7022662,"line_start":800,"line_end":800,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7022968,"byte_end":7022978,"line_start":811,"line_end":811,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"fn (&self, _: &mut Context<'_>) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7022901,"byte_end":7022956,"line_start":810,"line_end":810,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7023299,"byte_end":7023308,"line_start":822,"line_end":822,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7023218,"byte_end":7023287,"line_start":821,"line_end":821,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7023500,"byte_end":7023513,"line_start":827,"line_end":827,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7023414,"byte_end":7023488,"line_start":826,"line_end":826,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7023721,"byte_end":7023731,"line_start":834,"line_end":834,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7023618,"byte_end":7023709,"line_start":833,"line_end":833,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024448,"byte_end":7024458,"line_start":859,"line_end":859,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"fn (&mut self, msg: T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024253,"byte_end":7024287,"line_start":855,"line_end":855,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024292,"byte_end":7024295,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024300,"byte_end":7024373,"line_start":857,"line_end":857,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024378,"byte_end":7024436,"line_start":858,"line_end":858,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024823,"byte_end":7024837,"line_start":869,"line_end":869,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"fn (&self, msg: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024577,"byte_end":7024616,"line_start":864,"line_end":864,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024621,"byte_end":7024624,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024629,"byte_end":7024704,"line_start":866,"line_end":866,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024709,"byte_end":7024785,"line_start":867,"line_end":867,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024790,"byte_end":7024811,"line_start":868,"line_end":868,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024996,"byte_end":7025009,"line_start":874,"line_end":874,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7024926,"byte_end":7024984,"line_start":873,"line_end":873,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7025257,"byte_end":7025272,"line_start":882,"line_end":882,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"fn (&self, receiver: &UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7025192,"byte_end":7025245,"line_start":881,"line_end":881,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7025549,"byte_end":7025562,"line_start":890,"line_end":890,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"fn <H> (&self, hasher: &mut H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7025489,"byte_end":7025537,"line_start":889,"line_end":889,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7029045,"byte_end":7029050,"line_start":1007,"line_end":1007,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7028808,"byte_end":7028872,"line_start":1003,"line_end":1003,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7028877,"byte_end":7028880,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7028885,"byte_end":7028960,"line_start":1005,"line_end":1005,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7028965,"byte_end":7029033,"line_start":1006,"line_end":1006,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7029833,"byte_end":7029841,"line_start":1027,"line_end":1027,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"fn (&mut self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7029445,"byte_end":7029520,"line_start":1019,"line_end":1019,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7029525,"byte_end":7029528,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7029533,"byte_end":7029605,"line_start":1021,"line_end":1021,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7029610,"byte_end":7029684,"line_start":1022,"line_end":1022,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7029689,"byte_end":7029709,"line_start":1023,"line_end":1023,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7029714,"byte_end":7029717,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7029722,"byte_end":7029796,"line_start":1025,"line_end":1025,"column_start":5,"column_end":79}},{"value":"/ returned `None`.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7029801,"byte_end":7029821,"line_start":1026,"line_end":1026,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7033874,"byte_end":7033879,"line_start":1143,"line_end":1143,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7033637,"byte_end":7033701,"line_start":1139,"line_end":1139,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7033706,"byte_end":7033709,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7033714,"byte_end":7033789,"line_start":1141,"line_end":1141,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7033794,"byte_end":7033862,"line_start":1142,"line_end":1142,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7034381,"byte_end":7034389,"line_start":1157,"line_end":1157,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"fn (&mut self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7033993,"byte_end":7034068,"line_start":1149,"line_end":1149,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7034073,"byte_end":7034076,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7034081,"byte_end":7034153,"line_start":1151,"line_end":1151,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7034158,"byte_end":7034232,"line_start":1152,"line_end":1152,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7034237,"byte_end":7034257,"line_start":1153,"line_end":1153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7034262,"byte_end":7034265,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7034270,"byte_end":7034344,"line_start":1155,"line_end":1155,"column_start":5,"column_end":79}},{"value":"/ returned `None`.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7034349,"byte_end":7034369,"line_start":1156,"line_end":1156,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":288},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":497},{"krate":0,"index":503},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":317},{"krate":0,"index":324},{"krate":0,"index":506},{"krate":0,"index":510},{"krate":0,"index":327},{"krate":0,"index":514},{"krate":0,"index":525},{"krate":0,"index":524},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":516},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":338},{"krate":0,"index":342}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":1684,"byte_end":1709,"line_start":45,"line_end":45,"column_start":5,"column_end":30}},{"value":"! A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7048350,"byte_end":7048420,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7048421,"byte_end":7048424,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This is a single-producer, single-consumer channel.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7048425,"byte_end":7048480,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":485},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7048959,"byte_end":7048967,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":487}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7048724,"byte_end":7048800,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7048801,"byte_end":7048804,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7048805,"byte_end":7048862,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7048863,"byte_end":7048930,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":491},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7049152,"byte_end":7049158,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":493}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7049002,"byte_end":7049061,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7049062,"byte_end":7049065,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7049066,"byte_end":7049123,"line_start":26,"line_end":26,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":304},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052262,"byte_end":7052269,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"fn <T> () -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051063,"byte_end":7051151,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051152,"byte_end":7051155,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051156,"byte_end":7051231,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051232,"byte_end":7051235,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051236,"byte_end":7051316,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051317,"byte_end":7051395,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051396,"byte_end":7051473,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051474,"byte_end":7051552,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051553,"byte_end":7051601,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051602,"byte_end":7051605,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051606,"byte_end":7051666,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051667,"byte_end":7051670,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051671,"byte_end":7051685,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051686,"byte_end":7051689,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051690,"byte_end":7051697,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051698,"byte_end":7051732,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051733,"byte_end":7051771,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051772,"byte_end":7051775,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051776,"byte_end":7051831,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051832,"byte_end":7051835,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051836,"byte_end":7051858,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051859,"byte_end":7051903,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051904,"byte_end":7051955,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7051956,"byte_end":7052004,"line_start":96,"line_end":96,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052005,"byte_end":7052037,"line_start":97,"line_end":97,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052038,"byte_end":7052045,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052046,"byte_end":7052049,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052050,"byte_end":7052096,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052097,"byte_end":7052100,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052101,"byte_end":7052140,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052141,"byte_end":7052186,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052187,"byte_end":7052238,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052239,"byte_end":7052246,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052247,"byte_end":7052254,"line_start":106,"line_end":106,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061532,"byte_end":7061536,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (self, t: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061039,"byte_end":7061091,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061096,"byte_end":7061099,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061104,"byte_end":7061176,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061181,"byte_end":7061253,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061258,"byte_end":7061290,"line_start":340,"line_end":340,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061295,"byte_end":7061298,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061303,"byte_end":7061375,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061380,"byte_end":7061450,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061455,"byte_end":7061520,"line_start":344,"line_end":344,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062188,"byte_end":7062201,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061606,"byte_end":7061667,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061672,"byte_end":7061716,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061721,"byte_end":7061724,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061729,"byte_end":7061748,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061753,"byte_end":7061756,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061761,"byte_end":7061831,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061836,"byte_end":7061910,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061915,"byte_end":7061918,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061923,"byte_end":7061991,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061996,"byte_end":7062069,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062074,"byte_end":7062146,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062151,"byte_end":7062176,"line_start":360,"line_end":360,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062565,"byte_end":7062577,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"fn (&mut self) -> Cancellation<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062297,"byte_end":7062366,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062371,"byte_end":7062415,"line_start":366,"line_end":366,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062420,"byte_end":7062423,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062428,"byte_end":7062499,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future).","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062504,"byte_end":7062553,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063001,"byte_end":7063012,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062662,"byte_end":7062727,"line_start":374,"line_end":374,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062732,"byte_end":7062753,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062758,"byte_end":7062761,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062766,"byte_end":7062841,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062846,"byte_end":7062917,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7062922,"byte_end":7062989,"line_start":379,"line_end":379,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063236,"byte_end":7063251,"line_start":386,"line_end":386,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"fn (&self, receiver: &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063074,"byte_end":7063167,"line_start":384,"line_end":384,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063172,"byte_end":7063224,"line_start":385,"line_end":385,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":506},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063712,"byte_end":7063724,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":509}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063444,"byte_end":7063519,"line_start":397,"line_end":397,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063520,"byte_end":7063523,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063524,"byte_end":7063615,"line_start":399,"line_end":399,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063616,"byte_end":7063683,"line_start":400,"line_end":400,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":514},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064114,"byte_end":7064122,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063951,"byte_end":7064022,"line_start":414,"line_end":414,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064023,"byte_end":7064057,"line_start":415,"line_end":415,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064730,"byte_end":7064735,"line_start":436,"line_end":436,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064358,"byte_end":7064431,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064436,"byte_end":7064451,"line_start":430,"line_end":430,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064456,"byte_end":7064459,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064464,"byte_end":7064531,"line_start":432,"line_end":432,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064536,"byte_end":7064598,"line_start":433,"line_end":433,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064603,"byte_end":7064676,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064681,"byte_end":7064718,"line_start":435,"line_end":435,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7065166,"byte_end":7065174,"line_start":448,"line_end":448,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064790,"byte_end":7064857,"line_start":440,"line_end":440,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064862,"byte_end":7064865,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064870,"byte_end":7064937,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064942,"byte_end":7064945,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064950,"byte_end":7065023,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7065028,"byte_end":7065094,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7065099,"byte_end":7065102,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7065107,"byte_end":7065154,"line_start":447,"line_end":447,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6993973,"byte_end":6993977,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6994014,"byte_end":6994018,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6994034,"byte_end":6994038,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6994876,"byte_end":6994883,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6995136,"byte_end":6995143,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6995506,"byte_end":6995513,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/queue.rs","byte_start":7042305,"byte_end":7042310,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/queue.rs","byte_start":7042348,"byte_end":7042353,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/queue.rs","byte_start":7042370,"byte_end":7042374,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/queue.rs","byte_start":7042567,"byte_end":7042572,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/queue.rs","byte_start":7045469,"byte_end":7045474,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/sink_impl.rs","byte_start":7045936,"byte_end":7045942,"line_start":6,"line_end":6,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/sink_impl.rs","byte_start":7046888,"byte_end":7046903,"line_start":45,"line_end":45,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001034,"byte_end":7001054,"line_start":118,"line_end":118,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001079,"byte_end":7001097,"line_start":119,"line_end":119,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001568,"byte_end":7001583,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002107,"byte_end":7002124,"line_start":153,"line_end":153,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002667,"byte_end":7002676,"line_start":179,"line_end":179,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002956,"byte_end":7002965,"line_start":189,"line_end":189,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002975,"byte_end":7002984,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7003472,"byte_end":7003484,"line_start":209,"line_end":209,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7003691,"byte_end":7003703,"line_start":217,"line_end":217,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004005,"byte_end":7004017,"line_start":227,"line_end":227,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004033,"byte_end":7004045,"line_start":229,"line_end":229,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004645,"byte_end":7004657,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004814,"byte_end":7004826,"line_start":258,"line_end":258,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004975,"byte_end":7004987,"line_start":264,"line_end":264,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007083,"byte_end":7007093,"line_start":335,"line_end":335,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7009762,"byte_end":7009782,"line_start":426,"line_end":426,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7012640,"byte_end":7012658,"line_start":512,"line_end":512,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7019903,"byte_end":7019909,"line_start":719,"line_end":719,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7022876,"byte_end":7022891,"line_start":809,"line_end":809,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7025761,"byte_end":7025767,"line_start":898,"line_end":898,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7025859,"byte_end":7025874,"line_start":904,"line_end":904,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7025966,"byte_end":7025986,"line_start":910,"line_end":910,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7027027,"byte_end":7027045,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7028228,"byte_end":7028248,"line_start":974,"line_end":974,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7028493,"byte_end":7028511,"line_start":985,"line_end":985,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7028790,"byte_end":7028798,"line_start":1002,"line_end":1002,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7032293,"byte_end":7032301,"line_start":1091,"line_end":1091,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7032333,"byte_end":7032341,"line_start":1093,"line_end":1093,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7032442,"byte_end":7032450,"line_start":1099,"line_end":1099,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7033330,"byte_end":7033338,"line_start":1126,"line_end":1126,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7033610,"byte_end":7033627,"line_start":1138,"line_end":1138,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7036326,"byte_end":7036343,"line_start":1207,"line_end":1207,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7036444,"byte_end":7036461,"line_start":1213,"line_end":1213,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7037337,"byte_end":7037354,"line_start":1240,"line_end":1240,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7037666,"byte_end":7037680,"line_start":1258,"line_end":1258,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7037963,"byte_end":7037975,"line_start":1270,"line_end":1270,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7038501,"byte_end":7038515,"line_start":1288,"line_end":1288,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7038552,"byte_end":7038566,"line_start":1289,"line_end":1289,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7038604,"byte_end":7038616,"line_start":1291,"line_end":1291,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7038653,"byte_end":7038665,"line_start":1292,"line_end":1292,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7049266,"byte_end":7049274,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7049299,"byte_end":7049305,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052494,"byte_end":7052499,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061023,"byte_end":7061029,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063369,"byte_end":7063375,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063786,"byte_end":7063798,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064147,"byte_end":7064155,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064319,"byte_end":7064327,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064340,"byte_end":7064348,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7065277,"byte_end":7065285,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7065495,"byte_end":7065503,"line_start":464,"line_end":464,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":1674,"byte_end":1678,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lib.rs","byte_start":1722,"byte_end":1729,"line_start":46,"line_end":46,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":288}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6993973,"byte_end":6993977,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6994014,"byte_end":6994018,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6994034,"byte_end":6994038,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6994876,"byte_end":6994883,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6995136,"byte_end":6995143,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/lock.rs","byte_start":6995506,"byte_end":6995513,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/queue.rs","byte_start":7042305,"byte_end":7042310,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":359},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/queue.rs","byte_start":7042348,"byte_end":7042353,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":359},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/queue.rs","byte_start":7042370,"byte_end":7042374,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/queue.rs","byte_start":7042567,"byte_end":7042572,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/queue.rs","byte_start":7045469,"byte_end":7045474,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":359},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/sink_impl.rs","byte_start":7045936,"byte_end":7045942,"line_start":6,"line_end":6,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":380},"to":{"krate":16,"index":9}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/sink_impl.rs","byte_start":7046888,"byte_end":7046903,"line_start":45,"line_end":45,"column_start":21,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":387},"to":{"krate":16,"index":9}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001034,"byte_end":7001054,"line_start":118,"line_end":118,"column_start":19,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":366},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001079,"byte_end":7001097,"line_start":119,"line_end":119,"column_start":19,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":372},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001524,"byte_end":7001528,"line_start":133,"line_end":133,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1903},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001531,"byte_end":7001535,"line_start":133,"line_end":133,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001538,"byte_end":7001543,"line_start":133,"line_end":133,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1604},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7001568,"byte_end":7001583,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":387},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002107,"byte_end":7002124,"line_start":153,"line_end":153,"column_start":19,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002667,"byte_end":7002676,"line_start":179,"line_end":179,"column_start":23,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":406},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002956,"byte_end":7002965,"line_start":189,"line_end":189,"column_start":28,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":406},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7002975,"byte_end":7002984,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7003472,"byte_end":7003484,"line_start":209,"line_end":209,"column_start":24,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":419},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7003691,"byte_end":7003703,"line_start":217,"line_end":217,"column_start":26,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":419},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004005,"byte_end":7004017,"line_start":227,"line_end":227,"column_start":47,"column_end":59},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004033,"byte_end":7004045,"line_start":229,"line_end":229,"column_start":9,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004645,"byte_end":7004657,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004814,"byte_end":7004826,"line_start":258,"line_end":258,"column_start":23,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7004975,"byte_end":7004987,"line_start":264,"line_end":264,"column_start":28,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":124},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7007083,"byte_end":7007093,"line_start":335,"line_end":335,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7009762,"byte_end":7009782,"line_start":426,"line_end":426,"column_start":9,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7012640,"byte_end":7012658,"line_start":512,"line_end":512,"column_start":9,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7019903,"byte_end":7019909,"line_start":719,"line_end":719,"column_start":9,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7022876,"byte_end":7022891,"line_start":809,"line_end":809,"column_start":9,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7025761,"byte_end":7025767,"line_start":898,"line_end":898,"column_start":19,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7025859,"byte_end":7025874,"line_start":904,"line_end":904,"column_start":19,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7025966,"byte_end":7025986,"line_start":910,"line_end":910,"column_start":19,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":366},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7027027,"byte_end":7027045,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":372},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7028228,"byte_end":7028248,"line_start":974,"line_end":974,"column_start":18,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":366},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7028493,"byte_end":7028511,"line_start":985,"line_end":985,"column_start":18,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":372},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7028790,"byte_end":7028798,"line_start":1002,"line_end":1002,"column_start":9,"column_end":17},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7032293,"byte_end":7032301,"line_start":1091,"line_end":1091,"column_start":19,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7032333,"byte_end":7032341,"line_start":1093,"line_end":1093,"column_start":25,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":394},"to":{"krate":15,"index":82}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7032442,"byte_end":7032450,"line_start":1099,"line_end":1099,"column_start":20,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":394},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7033330,"byte_end":7033338,"line_start":1126,"line_end":1126,"column_start":18,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7033610,"byte_end":7033627,"line_start":1138,"line_end":1138,"column_start":9,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7036326,"byte_end":7036343,"line_start":1207,"line_end":1207,"column_start":25,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":400},"to":{"krate":15,"index":82}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7036444,"byte_end":7036461,"line_start":1213,"line_end":1213,"column_start":20,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":400},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7037337,"byte_end":7037354,"line_start":1240,"line_end":1240,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7037666,"byte_end":7037680,"line_start":1258,"line_end":1258,"column_start":9,"column_end":23},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7037963,"byte_end":7037975,"line_start":1270,"line_end":1270,"column_start":9,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7038501,"byte_end":7038515,"line_start":1288,"line_end":1288,"column_start":31,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7038552,"byte_end":7038566,"line_start":1289,"line_end":1289,"column_start":31,"column_end":45},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7038604,"byte_end":7038616,"line_start":1291,"line_end":1291,"column_start":31,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/mpsc/mod.rs","byte_start":7038653,"byte_end":7038665,"line_start":1292,"line_end":1292,"column_start":31,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7049266,"byte_end":7049274,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7049299,"byte_end":7049305,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7052494,"byte_end":7052499,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7061023,"byte_end":7061029,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063369,"byte_end":7063375,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7063786,"byte_end":7063798,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064147,"byte_end":7064155,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":514},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064319,"byte_end":7064327,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":514},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7064340,"byte_end":7064348,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7065277,"byte_end":7065285,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/dd26/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.8/src/oneshot.rs","byte_start":7065495,"byte_end":7065503,"line_start":464,"line_end":464,"column_start":18,"column_end":26},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2098}}]}